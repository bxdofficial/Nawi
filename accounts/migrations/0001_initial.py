# Generated by Django 4.2.8 on 2025-09-16 19:09

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='البريد الإلكتروني')),
                ('name', models.CharField(max_length=255, verbose_name='الاسم الكامل')),
                ('role', models.CharField(choices=[('ADMIN', 'مدير النظام'), ('MANAGER', 'مدير تنفيذي'), ('DESIGNER', 'مصمم'), ('CLIENT', 'عميل')], default='CLIENT', max_length=20, verbose_name='الدور')),
                ('user_type', models.CharField(blank=True, choices=[('teacher', 'مدرس'), ('shop', 'محل')], max_length=20, verbose_name='نوع المستخدم')),
                ('gender', models.CharField(blank=True, choices=[('male', 'ذكر'), ('female', 'أنثى')], max_length=10, verbose_name='الجنس')),
                ('phone', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="رقم الهاتف يجب أن يكون بالصيغة: '+999999999'. حتى 15 رقم مسموح.", regex='^\\+?1?\\d{9,15}$')], verbose_name='رقم الهاتف')),
                ('whatsapp', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="رقم الهاتف يجب أن يكون بالصيغة: '+999999999'. حتى 15 رقم مسموح.", regex='^\\+?1?\\d{9,15}$')], verbose_name='واتساب')),
                ('facebook_url', models.URLField(blank=True, verbose_name='رابط الفيسبوك')),
                ('youtube_url', models.URLField(blank=True, verbose_name='رابط اليوتيوب')),
                ('instagram_url', models.URLField(blank=True, verbose_name='رابط الإنستغرام')),
                ('school_name', models.CharField(blank=True, max_length=255, verbose_name='اسم المدرسة')),
                ('region', models.CharField(blank=True, max_length=100, verbose_name='المنطقة')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profiles/%Y/%m/', verbose_name='الصورة الشخصية')),
                ('is_verified', models.BooleanField(default=False, verbose_name='تم التحقق')),
                ('is_premium', models.BooleanField(default=False, verbose_name='عضوية مميزة')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='الرصيد')),
                ('points', models.IntegerField(default=0, verbose_name='النقاط')),
                ('last_seen', models.DateTimeField(blank=True, null=True, verbose_name='آخر ظهور')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('preferences', models.JSONField(blank=True, default=dict, verbose_name='التفضيلات')),
                ('notifications_enabled', models.BooleanField(default=True, verbose_name='تفعيل الإشعارات')),
                ('email_notifications', models.BooleanField(default=True, verbose_name='إشعارات البريد')),
            ],
            options={
                'verbose_name': 'مستخدم',
                'verbose_name_plural': 'المستخدمون',
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='اسم الصف')),
                ('level', models.CharField(choices=[('primary', 'ابتدائي'), ('middle', 'إعدادي'), ('secondary', 'ثانوي')], max_length=20, verbose_name='المرحلة')),
                ('order', models.IntegerField(default=0, verbose_name='الترتيب')),
            ],
            options={
                'verbose_name': 'صف دراسي',
                'verbose_name_plural': 'الصفوف الدراسية',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='اسم المادة')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='رمز المادة')),
                ('description', models.TextField(blank=True, verbose_name='الوصف')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='أيقونة')),
            ],
            options={
                'verbose_name': 'مادة دراسية',
                'verbose_name_plural': 'المواد الدراسية',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DesignerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, verbose_name='نبذة تعريفية')),
                ('skills', models.JSONField(blank=True, default=list, verbose_name='المهارات')),
                ('skill_level', models.CharField(choices=[('beginner', 'مبتدئ'), ('intermediate', 'متوسط'), ('advanced', 'متقدم'), ('expert', 'خبير')], default='intermediate', max_length=20, verbose_name='مستوى المهارة')),
                ('rating', models.DecimalField(decimal_places=2, default=0, max_digits=3, verbose_name='التقييم')),
                ('total_projects', models.IntegerField(default=0, verbose_name='إجمالي المشاريع')),
                ('completed_projects', models.IntegerField(default=0, verbose_name='المشاريع المكتملة')),
                ('ongoing_projects', models.IntegerField(default=0, verbose_name='المشاريع الجارية')),
                ('completion_rate', models.DecimalField(decimal_places=2, default=0, help_text='النسبة المئوية للمشاريع المكتملة في الوقت', max_digits=5, verbose_name='معدل الإنجاز')),
                ('average_delivery_time', models.IntegerField(default=0, help_text='بالساعات', verbose_name='متوسط وقت التسليم')),
                ('is_available', models.BooleanField(default=True, verbose_name='متاح للعمل')),
                ('max_concurrent_projects', models.IntegerField(default=5, verbose_name='الحد الأقصى للمشاريع المتزامنة')),
                ('portfolio_images', models.JSONField(blank=True, default=list, verbose_name='صور المعرض')),
                ('featured_works', models.JSONField(blank=True, default=list, verbose_name='الأعمال المميزة')),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='السعر بالساعة')),
                ('specializations', models.JSONField(blank=True, default=list, verbose_name='التخصصات')),
                ('preferred_categories', models.JSONField(blank=True, default=list, verbose_name='الفئات المفضلة')),
                ('joined_as_designer', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الانضمام كمصمم')),
                ('last_project_date', models.DateTimeField(blank=True, null=True, verbose_name='تاريخ آخر مشروع')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='designer_profile', to=settings.AUTH_USER_MODEL, verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'ملف تعريف المصمم',
                'verbose_name_plural': 'ملفات تعريف المصممين',
                'ordering': ['-rating', '-completed_projects'],
            },
        ),
        migrations.AddField(
            model_name='user',
            name='grades',
            field=models.ManyToManyField(blank=True, to='accounts.grade', verbose_name='الصفوف'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='subjects',
            field=models.ManyToManyField(blank=True, to='accounts.subject', verbose_name='المواد'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('CREATE', 'إنشاء'), ('UPDATE', 'تحديث'), ('DELETE', 'حذف'), ('LOGIN', 'تسجيل دخول'), ('LOGOUT', 'تسجيل خروج'), ('PERMISSION_CHANGE', 'تغيير الصلاحيات'), ('STATUS_CHANGE', 'تغيير الحالة'), ('PAYMENT', 'عملية دفع')], max_length=20, verbose_name='الإجراء')),
                ('model_name', models.CharField(max_length=100, verbose_name='نوع النموذج')),
                ('object_id', models.CharField(blank=True, max_length=255, verbose_name='معرف الكائن')),
                ('data', models.JSONField(blank=True, default=dict, verbose_name='البيانات')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='عنوان IP')),
                ('user_agent', models.TextField(blank=True, verbose_name='وكيل المستخدم')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='الوقت')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'سجل تدقيق',
                'verbose_name_plural': 'سجلات التدقيق',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', 'timestamp'], name='accounts_au_user_id_d4cccd_idx'), models.Index(fields=['action', 'timestamp'], name='accounts_au_action_11cc52_idx'), models.Index(fields=['model_name', 'object_id'], name='accounts_au_model_n_76c60d_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='accounts_us_email_74c8d6_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['role'], name='accounts_us_role_1fa9a5_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['created_at'], name='accounts_us_created_4734df_idx'),
        ),
    ]
